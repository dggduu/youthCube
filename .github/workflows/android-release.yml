name: Android Release

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.19.0"

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Grant permissions to gradlew
        run: chmod +x android/gradlew

      - name: Install Node.js Dependencies
        working-directory: .
        run:
          npm install yarn -g 
          yarn install

      - name: Build Release APKs
        working-directory: android
        run: ./gradlew assembleRelease

      - name: Sign APKs with Release Key
        uses: r0adkll/sign-android-release@v1
        id: sign_apks
        with:
          releaseDirectory: android/app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY_BASE64 }}
          alias: ${{ secrets.KEYSTORE_ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "35.0.0"

      - name: Debug - Check Signed Files Output
        run: |
          echo "üîç Found signed APKs: '${{ steps.sign_apks.outputs.signedReleaseFiles }}'"
          if [ -z "${{ steps.sign_apks.outputs.signedReleaseFiles }}" ]; then
            echo "‚ùå No signed APKs were generated!"
            exit 1
          fi

      - name: Split Signed APKs List
        uses: jungwinter/split@v1
        id: split_apks
        with:
          msg: ${{ steps.sign_apks.outputs.signedReleaseFiles }}
          seperator: ":"
          maxsplit: "-1"

      - name: Create GitHub Release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Universal APK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.split_apks.outputs._0 }}
          asset_name: youthcube-universal-${{ github.ref_name }}.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload arm64-v8a APK
        if: steps.split_apks.outputs._1 != ''
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.split_apks.outputs._1 }}
          asset_name: youthcube-arm64-v8a-${{ github.ref_name }}.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload armeabi-v7a APK
        if: steps.split_apks.outputs._2 != ''
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.split_apks.outputs._2 }}
          asset_name: youthcube-armeabi-v7a-${{ github.ref_name }}.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload x86_64 APK
        if: steps.split_apks.outputs._3 != ''
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.split_apks.outputs._3 }}
          asset_name: youthcube-x86_64-${{ github.ref_name }}.apk
          asset_content_type: application/vnd.android.package-archive
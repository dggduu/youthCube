name: Build Android Release & Create GitHub Release

on:
  push:
    tags:
      - "v*"

jobs:
  build-android-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '22.19.0'
          cache: "yarn"

      - name: Install yarn
        run: npm install -g yarn


      - name: Install dependencies
        run: |
          yarn install
          yarn add lightningcss-linux-x64-gnu

          
      - name: Extract version from tag and update build.gradle
        run: |
          TAG_NAME="${GITHUB_REF#refs/tags/}"
          VERSION_NAME="${TAG_NAME#v}"
          VERSION_CODE=${{ github.run_number }}
          echo "VERSION_NAME=$VERSION_NAME" >> $GITHUB_ENV
          echo "VERSION_CODE=$VERSION_CODE" >> $GITHUB_ENV
          cd android || exit 1
          sed -i "s/versionName \".*\"/versionName \"$VERSION_NAME\"/" app/build.gradle
          sed -i "s/versionCode [0-9]*/versionCode $VERSION_CODE/" app/build.gradle
      - name: Generate JS Bundle for Android
        run: |
          npx react-native bundle \
            --platform android \
            --dev false \
            --entry-file index.js \
            --bundle-output android/app/src/main/assets/index.android.bundle \
            --assets-dest android/app/src/main/res/
      - name: Make gradlew executable
        run: |
          cd android && chmod +x gradlew
      - name: Build Android Release (Split APKs + Universal)
        run: |
          cd android
          ./gradlew assembleRelease --no-daemon
      - name: Sign APKs
        uses: r0adkll/sign-android-release@v1
        id: sign_apks
        with:
          releaseDirectory: android/app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "35.0.0"

      - name: Split Signed APKs List
        uses: jungwinter/split@v1
        id: split_apks
        with:
          msg: ${{ steps.sign_apks.outputs.signedReleaseFiles }}
          seperator: ":"
          maxsplit: "-1"

      - name: Create GitHub Release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Universal APK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.split_apks.outputs._0 }}
          asset_name: youthcube-universal-${{ github.ref_name }}.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload arm64-v8a APK
        if: steps.split_apks.outputs._1 != ''
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.split_apks.outputs._1 }}
          asset_name: youthcube-arm64-v8a-${{ github.ref_name }}.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload armeabi-v7a APK
        if: steps.split_apks.outputs._2 != ''
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.split_apks.outputs._2 }}
          asset_name: youthcube-armeabi-v7a-${{ github.ref_name }}.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload x86_64 APK
        if: steps.split_apks.outputs._3 != ''
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.split_apks.outputs._3 }}
          asset_name: youthcube-x86_64-${{ github.ref_name }}.apk
          asset_content_type: application/vnd.android.package-archive
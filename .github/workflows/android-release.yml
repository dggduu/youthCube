name: Build Android Release & Create GitHub Release

on:
  push:
    tags:
      - 'v*' # 触发条件：推送以 'v' 开头的 tag

jobs:
  build-android-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Install yarn
        run: npm install -g yarn

      - name: Cache Yarn & Node Modules
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: |
            ~/.cache/yarn
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies using yarn
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: |
          yarn install
          yarn add lightningcss-linux-x64-gnu

      - name: Cache Gradle
        uses: actions/cache@v3
        id: cache-gradle
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('android/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Extract version and update build.gradle
        run: |
          TAG_NAME="${GITHUB_REF#refs/tags/}"
          echo "Tag name: $TAG_NAME"

          VERSION_NAME="${TAG_NAME#v}"
          echo "Version name: $VERSION_NAME"

          VERSION_CODE=${{ github.run_number }}
          echo "Version code: $VERSION_CODE"

          cd android || exit 1

          sed -i "s/versionName \".*\"/versionName \"$VERSION_NAME\"/" app/build.gradle
          sed -i "s/versionCode [0-9]*/versionCode $VERSION_CODE/" app/build.gradle

          echo "更新 build.gradle 成功: versionName=$VERSION_NAME, versionCode=$VERSION_CODE"

      - name: Generate JS Bundle for Android
        run: |
          npx react-native bundle \
            --platform android \
            --dev false \
            --entry-file index.js \
            --bundle-output android/app/src/main/assets/index.android.bundle \
            --assets-dest android/app/src/main/res/

      - name: Make gradlew executable
        run: |
          cd android && chmod +x gradlew

      - name: Build Android Release (Split APKs)
        run: |
          cd android && ./gradlew assembleRelease --no-daemon

      - name: Sign all APKs
        uses: r0adkll/sign-android-release@v1
        id: sign_apks
        with:
          releaseDirectory: android/app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "34.0.0"

      - name: List signed APKs
        run: |
          echo "Signed APKs found:"
          echo "${{ steps.sign_apks.outputs.signedReleaseFiles }}"

      - name: Upload Signed APKs as artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-release-apks
          path: ${{ steps.sign_apks.outputs.signedReleaseFiles }}

      - name: Create GitHub Release and Upload All APKs
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          tag_name: ${{ github.ref_name }}
          body: |
            Release ${{ github.ref_name }}

            This release includes:
            - Split APKs for armeabi-v7a, arm64-v8a, and x86_64.
            - A universal APK containing all architectures.
          files: |
            ${{ steps.sign_apks.outputs.signedReleaseFiles }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
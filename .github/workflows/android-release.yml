name: Build Android Release & Create GitHub Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-android-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: false

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Generate React Native autolinking & codegen
        run: npx react-native config

      - name: Cache Gradle
        uses: actions/cache@v3
        id: cache-gradle
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('android/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Extract version and update build.gradle
        run: |
          TAG_NAME="${GITHUB_REF#refs/tags/}"
          echo "Tag name: $TAG_NAME"
          VERSION_NAME="${TAG_NAME#v}"
          echo "Version name: $VERSION_NAME"
          VERSION_CODE=${{ github.run_number }}
          echo "Version code: $VERSION_CODE"

          cd android || exit 1
          cp app/build.gradle app/build.gradle.backup

          sed -i "s/versionName \".*\"/versionName \"$VERSION_NAME\"/" app/build.gradle
          sed -i "s/versionCode [0-9]*/versionCode $VERSION_CODE/" app/build.gradle

          echo "Updated build.gradle: versionName=$VERSION_NAME, versionCode=$VERSION_CODE"

      - name: Generate JS Bundle for Android
        run: |
          # Á°Æ‰øù assets ÁõÆÂΩïÂ≠òÂú®
          mkdir -p android/app/src/main/assets
          npx react-native bundle \
            --platform android \
            --dev false \
            --entry-file index.js \
            --bundle-output android/app/src/main/assets/index.android.bundle \
            --assets-dest android/app/src/main/res/

      - name: Make gradlew executable
        run: cd android && chmod +x gradlew

      - name: Build Android Release
        run: |
          cd android && ./gradlew assembleRelease --no-daemon

      - name: List generated APKs
        run: |
          echo "Generated APKs:"
          find android/app/build/outputs -name "*.apk" -type f | xargs ls -la

      - name: Sign APKs
        uses: r0adkll/sign-android-release@v1
        id: sign_apks
        with:
          releaseDirectory: android/app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "34.0.0"
          
      - name: List signed APKs
        run: |
          echo "Signed APKs:"
          find android/app/build/outputs/apk/release -name "*.apk" -type f | xargs ls -la

      - name: Upload Signed APKs as artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-release-apks
          path: android/app/build/outputs/apk/release/*-signed.apk

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            üì± Android Release ${{ github.ref_name }}

            Built from tag: ${{ github.ref_name }}
            Run number: ${{ github.run_number }}
          files: android/app/build/outputs/apk/release/*-signed.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}